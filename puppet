#!/usr/local/bin/cbsd
#v11.0.14
MYARG="module jname"
MYOPTARG="mode formfile debug_form"
MYDESC="Generate puppet manifests"
ADDHELP="module= specify module name\n\
mode= apply - puppet apply\n\
jname= can CBSDSYS or cbsdpuppet1 for configure current system or just create manifest\n"

. ${subr}

debug_form=0
init $*

case "${jname}" in
	CBSDSYS|cbsdpuppet1)
		;;
	*)
		. ${jrcconf}
		[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"
		;;
esac

[ -z "${mode}" ] && mode="show"

[ -z "${formfile}" ] && formfile="${jailsysdir}/${jname}/helpers/${module}.sqlite"
[ ! -r ${formfile} ] && err 1 "${MAGENTA}No such formfile: ${GREEN}${formfile}${NORMAL}"

my_module_dir="${distmoduledir}/forms.d/${module}"
sitepp="${my_module_dir}/site.pp"

[ ! -r ${sitepp} ] && err 1 "${MAGENTA}No such sitepp: ${GREEN}${sitepp}${NORMAL}"

. ${sitepp}

mksitefile="${distmoduledir}/forms.d/${module}/site.pp"

. ${distdir}/imghelper.subr

readconf helpers.conf

param=$( cbsdsqlro ${formfile} SELECT param FROM forms ORDER BY CAST\(order_id AS int\) | ${XARGS_CMD} )
load_forms
load_new

apply_in_jail_remote()
{
	mkjhosts file=${data}/etc/hosts ips="${nodeip}" hosts="${certname}" template="Puppet-CBSD-module"

	${CAT_CMD} > ${data}/usr/local/etc/puppet/puppet.conf <<EOF
[agent]
server = ${certname}
pluginsync = true
show_diff = true
reports = none
environment = production
EOF

	# check for crt
	if [ -r /var/puppet/ssl/ca/signed/${host_hostname}.pem -a -r ${data}/var/puppet/ssl/certs/${host_hostname}.pem ]; then

		${FILE_CMD} -s /var/puppet/ssl/ca/signed/${host_hostname}.pem
		${FILE_CMD} -s ${data}/var/puppet/ssl/certs/${host_hostname}.pem

		md5_srv=$( ${MD5_CMD} -qs /var/puppet/ssl/ca/signed/${host_hostname}.pem 2>/dev/null )
		md5_cl=$( ${MD5_CMD} -qs ${data}/var/puppet/ssl/certs/${host_hostname}.pem 2>/dev/null )

		if [ "${md5_srv}" != "${md5_cl}" ]; then
			echo "Pem diffrence [ ${md5_srv} / ${md5_cl} ], clean-up for re-sign"
			/usr/local/bin/puppet cert clean ${host_hostname}
			jexec jname=${jname} ${FIND_CMD} /var/puppet/ssl -name ${host_hostname}.pem -delete
		else
			echo "Pem is equal: ${md5_srv} <=> ${md5_cl}"
		fi
	else
		echo "Prune old certificate"
		/usr/local/bin/puppet cert clean ${host_hostname}
		jexec jname=${jname} ${FIND_CMD} /var/puppet/ssl -name ${host_hostname}.pem -delete
	fi

	jexec jname=${jname} env LANG=en_US.UTF-8 /usr/local/bin/puppet agent -t

	echo "***"

	${UMOUNT_CMD} ${path}/usr/local/etc/puppet/modules
	${UMOUNT_CMD} ${path}/tmp/puppet/etc/puppet
	${UMOUNT_CMD} ${path}/tmp/puppet
	if [ ${_was_started} -eq 0 ]; then
		jstop jname=${jname}
		jcleanup jname=${jname}
	else
		[ -n "${have_restart}" ] && jexec jname=${jname} ${have_restart}
	fi
}


apply_in_jail_local()
{
	echo "Apply"
	# pkg update -f needed ? checksum mismatch error!!!


	#jexec jname=${jname} env LANG=en_US.UTF-8 /usr/local/bin/puppet apply /tmp/cbsdpuppet/manifest/init.pp --detailed-exitcodes --verbose --show_diff --summarize --hiera_config=/tmp/cbsdpuppet/hiera.yaml --app_management --modulepath=/usr/local/etc/puppet/modules
	#jexec jname=${jname} env LANG=en_US.UTF-8 /usr/local/bin/puppet apply /tmp/cbsdpuppet/manifest/init.pp --detailed-exitcodes --verbose --show_diff --summarize --hiera_config=/tmp/cbsdpuppet/hiera.yaml --modulepath=/usr/local/etc/puppet/modules
	if [ ${debug_form} -eq 1 ]; then
		case "${jname}" in
			CBSDSYS)
				echo "[debug] env LANG=en_US.UTF-8 /tmp/cbsdpuppet/puppetcbsd debug /tmp/cbsd/manifest/init.pp"
				env LANG=en_US.UTF-8 /tmp/cbsdpuppet/puppetcbsd debug /tmp/cbsd/manifest/init.pp
				;;
			*)
				echo "[debug] jexec jname=${jname} env LANG=en_US.UTF-8 /tmp/cbsdpuppet/puppetcbsd /tmp/cbsd/manifest/init.pp"
				jexec jname=${jname} env LANG=en_US.UTF-8 /tmp/cbsdpuppet/puppetcbsd debug /tmp/cbsd/manifest/init.pp
				;;
		esac
	else
		case "${jname}" in
			CBSDSYS)
				env LANG=en_US.UTF-8 /tmp/cbsdpuppet/puppetcbsd /tmp/cbsd/manifest/init.pp
				;;
			*)
				jexec jname=${jname} env LANG=en_US.UTF-8 /tmp/cbsdpuppet/puppetcbsd /tmp/cbsd/manifest/init.pp
				;;
		esac
	fi
	echo "***"

	${UMOUNT_CMD} ${path}/tmp/cbsdpuppet
	${UMOUNT_CMD} ${path}/tmp/puppet

	if [ "${jname}" != "CBSDSYS" ]; then
		if [ ${_was_started} -eq 0 ]; then
			jstop jname=${jname}
			jcleanup jname=${jname}
		else
			[ -n "${have_restart}" ] && jexec jname=${jname} ${have_restart}
		fi
	fi
}


# todo
# reload only when changed
puppet_setup()
{
	local _was_started

	case "${jname}" in
		CBSDSYS|cbsdpuppet1)
			# local apply
			path=
			data=
			baserw=1
			emulator=jail
			jid=1
			;;
		*)
			[ ${baserw} -eq 1 ] && path="${data}"
			[ -z "${path}" ] && err 1 "No path variable"

			if [ ${jid} -eq 0 ]; then
				case ${emulator} in
					jail)
						jstart jname=${jname}
						_was_started=0
						;;
					*)
						err 1 "${EMULATOR} VM is not running: ${GREEN}${jname}${NORMAL}"
						;;
				esac
			else
				_was_started=1
			fi
			;;
	esac

	[ ! -d ${distmoduledir}/puppet.d/modules/public ] && err 1 "No such ${distmoduledir}/puppet.d/modules/public"

	if [ "${emulator}" = "jail" ]; then

		for i in ${path}/tmp/cbsdpuppet ${path}/tmp/puppet; do
			[ ! -d ${i} ] && ${MKDIR_CMD} -p ${i}
		done

		${MOUNT_CMD} -t nullfs -oro /usr/local/cbsd/modules/puppet.d ${path}/tmp/cbsdpuppet
		${MOUNT_CMD} -t nullfs -oro ${workdir}/jails-data/cbsdpuppet1-data/usr/local ${path}/tmp/puppet

		#[ $? -ne 0 ] && err 1 "Error mount ${distmoduledir}/puppet.d/puppet_root/modules to /usr/local/etc/puppet/modules inside jail"
		#[ ! -d ${path}/tmp/cbsd ] && ${MKDIR_CMD} -p ${path}/tmp/cbsd

		if [ "${puppet_apply_method}" != "local" ]; then
			if [ ! -x ${data}/usr/local/bin/puppet ]; then
				jexec jname=${jname} env ASSUME_ALWAYS_YES=yes pkg install -y sysutils/puppet6
			fi
		fi
	fi

	pkg mode=bootstrap jname=${jname}

	case "${puppet_apply_method}" in
		local)
			[ ! -d ${path}/tmp/cbsd/manifest ] && ${MKDIR_CMD} -p ${path}/tmp/cbsd/manifest
			[ ! -d ${path}/tmp/cbsd/hieradata ] && ${MKDIR_CMD} -p ${path}/tmp/cbsd/hieradata
			jail_manifest="${path}/tmp/cbsd/manifest/init.pp"
			jail_hieradata="${path}/tmp/cbsd/hieradata/common.yaml"
${CAT_CMD} > ${path}/tmp/cbsd/hiera.yaml <<EOF
---
version: 5
defaults:
  # The default value for "datadir" is "data" under the same directory as the hiera.yaml
  # file (this file)
  # When specifying a datadir, make sure the directory exists.
  # See https://docs.puppet.com/puppet/latest/environments.html for further details on environments.
  # datadir: data
  # data_hash: yaml_data
hierarchy:
  - name: "CBSD YAML hierarchy levels"
    datadir: /tmp/cbsd/hieradata
    paths:
      - "common.yaml"
EOF
			;;
		remote)
			jail_manifest="${local_puppet_manifest_dir}/${module}.pp"
			jail_hieradata="${local_puppet_hieradata_dir}/${module}.yaml"
			;;
	esac

	${ECHO} "${N1_COLOR}generate manifest and save to: ${N2_COLOR}${local_puppet_manifest_dir}/${module}.pp${N0_COLOR}"
	generate_manifest > ${jail_manifest}
	${CP_CMD} ${jail_manifest} ${local_puppet_manifest_dir}/${module}.pp
	${ECHO} "${N1_COLOR}generate hieradata and save to: ${N2_COLOR}${local_puppet_hieradata_dir}/${module}.yaml${N0_COLOR}"
	generate_hieradata > ${jail_hieradata}
	${CP_CMD} ${jail_hieradata} ${local_puppet_hieradata_dir}/${module}.yaml

	#[ "${emulator}" = "jail" ] && ${CP_CMD} -a ${local_puppet_manifest_dir}/${module}.pp ${path}/tmp/cbsd/${helpername}.pp

	if [ "${puppet_apply_method}" = "remote" ]; then
		if [ -d /usr/local/etc/puppet/environments/production/manifests ]; then
			echo "Copy manifest to /usr/local/etc/puppet/environments/production/manifests/${host_hostname}.pp"
			echo "node \"${host_hostname}\" {" > /usr/local/etc/puppet/environments/production/manifests/${host_hostname}.pp
	#		${CP_CMD} ${local_puppet_manifest_dir}/${module}.pp /usr/local/etc/puppet/environments/production/manifests/${host_hostname}.pp
			${CAT_CMD} ${local_puppet_manifest_dir}/${module}.pp  >> /usr/local/etc/puppet/environments/production/manifests/${host_hostname}.pp
			echo "}" >> /usr/local/etc/puppet/environments/production/manifests/${host_hostname}.pp
		else
			echo "no /usr/local/etc/puppet/environments/production/manifests, skip for coping manifest"
		fi

		#[ "${emulator}" = "jail" ] && ${CP_CMD} -a ${local_puppet_hieradata_dir}/${module}.yaml ${path}/tmp/cbsd/common.yaml

		if [ -d /usr/local/etc/puppet/hieradata/production ]; then
	#		[ ! -d /usr/local/etc/puppet/hieradata/production/${helpername} ] && ${MKDIR_CMD} -p /usr/local/etc/puppet/hieradata/production/${helpername}
			[ ! -d /usr/local/etc/puppet/hieradata/production/node ] && ${MKDIR_CMD} -p /usr/local/etc/puppet/hieradata/production/node
			echo "Copy hiera to /usr/local/etc/puppet/hieradata/production/node/"
			${CP_CMD} ${local_puppet_hieradata_dir}/${module}.yaml /usr/local/etc/puppet/hieradata/production/node/${host_hostname}.yaml
		else
			echo "no /usr/local/etc/puppet/hieradata/production, skip for coping hiera"
		fi

		certname=$( /usr/local/bin/puppet config print certname )
	fi

	case "${emulator}" in
		jail)
			apply_in_jail_${puppet_apply_method}
			;;
	esac
}

local_puppet_dir="${jailsysdir}/${jname}/puppet"
local_puppet_manifest_dir="${local_puppet_dir}/manifest"
local_puppet_hieradata_dir="${local_puppet_dir}/hieradata"

[ ! -d ${local_puppet_manifest_dir} ] && ${MKDIR_CMD} -p ${local_puppet_manifest_dir}
[ ! -d ${local_puppet_hieradata_dir} ] && ${MKDIR_CMD} -p ${local_puppet_hieradata_dir}

# We check that we all have to be used helpers
#case "${helper_module}" in
#	puppet)
#		jstatus jname=${cbsd_helper_jname} > /dev/null 2>&1
#		[ $? -ne 1 ] && err 1 "${MAGENTA}No such ${cbsd_helper_jname} jail. Please obtain cbsdpuppet1 jail from repo or create in by hands${NORMAL}"
#		;;
#esac

case "${mode}" in
	"apply")
		${ECHO} "${MAGENTA}applying puppet manifest for: ${GREEN}${module}${NORMAL}"

		readconf puppetd.conf
		[ -z "${puppet_apply_method}" ] && puppet_apply_method="local"
		puppet_setup
		;;
	*)
		echo "Manifest dir: $local_puppet_manifest_dir" >&2
		echo "Hiera dir: $local_puppet_hieradata_dir" >&2

		generate_manifest > ${local_puppet_manifest_dir}/${module}.pp
		generate_hieradata > ${local_puppet_hieradata_dir}/${module}.yaml
		generate_manifest
		;;
esac
